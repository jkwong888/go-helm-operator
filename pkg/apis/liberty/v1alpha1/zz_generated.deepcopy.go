// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
	release "k8s.io/helm/pkg/proto/hapi/release"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCondition) DeepCopyInto(out *AppCondition) {
	*out = *in
	if in.Release != nil {
		in, out := &in.Release, &out.Release
		*out = new(release.Release)
		(*in).DeepCopyInto(*out)
	}
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCondition.
func (in *AppCondition) DeepCopy() *AppCondition {
	if in == nil {
		return nil
	}
	out := new(AppCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppStatus) DeepCopyInto(out *AppStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]AppCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppStatus.
func (in *AppStatus) DeepCopy() *AppStatus {
	if in == nil {
		return nil
	}
	out := new(AppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyApp) DeepCopyInto(out *LibertyApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyApp.
func (in *LibertyApp) DeepCopy() *LibertyApp {
	if in == nil {
		return nil
	}
	out := new(LibertyApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LibertyApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppArchSpec) DeepCopyInto(out *LibertyAppArchSpec) {
	*out = *in
	if in.Amd64 != nil {
		in, out := &in.Amd64, &out.Amd64
		*out = new(string)
		**out = **in
	}
	if in.Ppc64le != nil {
		in, out := &in.Ppc64le, &out.Ppc64le
		*out = new(string)
		**out = **in
	}
	if in.S390x != nil {
		in, out := &in.S390x, &out.S390x
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppArchSpec.
func (in *LibertyAppArchSpec) DeepCopy() *LibertyAppArchSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppArchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppAutoscalingSpec) DeepCopyInto(out *LibertyAppAutoscalingSpec) {
	*out = *in
	if in.MinReplicas != nil {
		in, out := &in.MinReplicas, &out.MinReplicas
		*out = new(int)
		**out = **in
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(int)
		**out = **in
	}
	if in.TargetCPUUtilizationPercentage != nil {
		in, out := &in.TargetCPUUtilizationPercentage, &out.TargetCPUUtilizationPercentage
		*out = new(int)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppAutoscalingSpec.
func (in *LibertyAppAutoscalingSpec) DeepCopy() *LibertyAppAutoscalingSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppAutoscalingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppDeploymentSpec) DeepCopyInto(out *LibertyAppDeploymentSpec) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppDeploymentSpec.
func (in *LibertyAppDeploymentSpec) DeepCopy() *LibertyAppDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppEnvSpec) DeepCopyInto(out *LibertyAppEnvSpec) {
	*out = *in
	if in.JvmArgs != nil {
		in, out := &in.JvmArgs, &out.JvmArgs
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppEnvSpec.
func (in *LibertyAppEnvSpec) DeepCopy() *LibertyAppEnvSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppEnvSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppIiopServiceSpec) DeepCopyInto(out *LibertyAppIiopServiceSpec) {
	*out = *in
	if in.SecurePort != nil {
		in, out := &in.SecurePort, &out.SecurePort
		*out = new(int)
		**out = **in
	}
	if in.SecureTargetPort != nil {
		in, out := &in.SecureTargetPort, &out.SecureTargetPort
		*out = new(int)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.NonSecurePort != nil {
		in, out := &in.NonSecurePort, &out.NonSecurePort
		*out = new(int)
		**out = **in
	}
	if in.NonSecureTargetPort != nil {
		in, out := &in.NonSecureTargetPort, &out.NonSecureTargetPort
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppIiopServiceSpec.
func (in *LibertyAppIiopServiceSpec) DeepCopy() *LibertyAppIiopServiceSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppIiopServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppImageSpec) DeepCopyInto(out *LibertyAppImageSpec) {
	*out = *in
	if in.ServerOverridesConfigMapName != nil {
		in, out := &in.ServerOverridesConfigMapName, &out.ServerOverridesConfigMapName
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ExtraEnvs != nil {
		in, out := &in.ExtraEnvs, &out.ExtraEnvs
		*out = new([]map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]map[string]string, len(*in))
			for i := range *in {
				if (*in)[i] != nil {
					in, out := &(*in)[i], &(*out)[i]
					*out = make(map[string]string, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
			}
		}
	}
	if in.License != nil {
		in, out := &in.License, &out.License
		*out = new(string)
		**out = **in
	}
	if in.PullPolicy != nil {
		in, out := &in.PullPolicy, &out.PullPolicy
		*out = new(string)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Lifecycle != nil {
		in, out := &in.Lifecycle, &out.Lifecycle
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ExtraVolumeMounts != nil {
		in, out := &in.ExtraVolumeMounts, &out.ExtraVolumeMounts
		*out = new([]map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]map[string]string, len(*in))
			for i := range *in {
				if (*in)[i] != nil {
					in, out := &(*in)[i], &(*out)[i]
					*out = make(map[string]string, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
			}
		}
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppImageSpec.
func (in *LibertyAppImageSpec) DeepCopy() *LibertyAppImageSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppIngressSpec) DeepCopyInto(out *LibertyAppIngressSpec) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RewriteTarget != nil {
		in, out := &in.RewriteTarget, &out.RewriteTarget
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppIngressSpec.
func (in *LibertyAppIngressSpec) DeepCopy() *LibertyAppIngressSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppIngressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppJmsServiceSpec) DeepCopyInto(out *LibertyAppJmsServiceSpec) {
	*out = *in
	if in.TargetPort != nil {
		in, out := &in.TargetPort, &out.TargetPort
		*out = new(int)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppJmsServiceSpec.
func (in *LibertyAppJmsServiceSpec) DeepCopy() *LibertyAppJmsServiceSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppJmsServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppList) DeepCopyInto(out *LibertyAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LibertyApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppList.
func (in *LibertyAppList) DeepCopy() *LibertyAppList {
	if in == nil {
		return nil
	}
	out := new(LibertyAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LibertyAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppLogsSpec) DeepCopyInto(out *LibertyAppLogsSpec) {
	*out = *in
	if in.ConsoleSource != nil {
		in, out := &in.ConsoleSource, &out.ConsoleSource
		*out = new(string)
		**out = **in
	}
	if in.PersistLogs != nil {
		in, out := &in.PersistLogs, &out.PersistLogs
		*out = new(bool)
		**out = **in
	}
	if in.PersistTransactionLogs != nil {
		in, out := &in.PersistTransactionLogs, &out.PersistTransactionLogs
		*out = new(bool)
		**out = **in
	}
	if in.ConsoleFormat != nil {
		in, out := &in.ConsoleFormat, &out.ConsoleFormat
		*out = new(string)
		**out = **in
	}
	if in.ConsoleLogLevel != nil {
		in, out := &in.ConsoleLogLevel, &out.ConsoleLogLevel
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppLogsSpec.
func (in *LibertyAppLogsSpec) DeepCopy() *LibertyAppLogsSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppLogsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppMicroprofileHealthSpec) DeepCopyInto(out *LibertyAppMicroprofileHealthSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppMicroprofileHealthSpec.
func (in *LibertyAppMicroprofileHealthSpec) DeepCopy() *LibertyAppMicroprofileHealthSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppMicroprofileHealthSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppMicroprofileSpec) DeepCopyInto(out *LibertyAppMicroprofileSpec) {
	*out = *in
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = new(LibertyAppMicroprofileHealthSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppMicroprofileSpec.
func (in *LibertyAppMicroprofileSpec) DeepCopy() *LibertyAppMicroprofileSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppMicroprofileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppMonitoringSpec) DeepCopyInto(out *LibertyAppMonitoringSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppMonitoringSpec.
func (in *LibertyAppMonitoringSpec) DeepCopy() *LibertyAppMonitoringSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppMonitoringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppPersistenceSelectorSpec) DeepCopyInto(out *LibertyAppPersistenceSelectorSpec) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppPersistenceSelectorSpec.
func (in *LibertyAppPersistenceSelectorSpec) DeepCopy() *LibertyAppPersistenceSelectorSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppPersistenceSelectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppPersistenceSpec) DeepCopyInto(out *LibertyAppPersistenceSpec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.UseDynamicProvisioning != nil {
		in, out := &in.UseDynamicProvisioning, &out.UseDynamicProvisioning
		*out = new(bool)
		**out = **in
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(LibertyAppPersistenceSelectorSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppPersistenceSpec.
func (in *LibertyAppPersistenceSpec) DeepCopy() *LibertyAppPersistenceSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppPersistenceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppPodSpec) DeepCopyInto(out *LibertyAppPodSpec) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ExtraInitContainers != nil {
		in, out := &in.ExtraInitContainers, &out.ExtraInitContainers
		*out = new([]map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]map[string]string, len(*in))
			for i := range *in {
				if (*in)[i] != nil {
					in, out := &(*in)[i], &(*out)[i]
					*out = make(map[string]string, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
			}
		}
	}
	if in.ExtraContainers != nil {
		in, out := &in.ExtraContainers, &out.ExtraContainers
		*out = new([]map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]map[string]string, len(*in))
			for i := range *in {
				if (*in)[i] != nil {
					in, out := &(*in)[i], &(*out)[i]
					*out = make(map[string]string, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
			}
		}
	}
	if in.ExtraVolumes != nil {
		in, out := &in.ExtraVolumes, &out.ExtraVolumes
		*out = new([]map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]map[string]string, len(*in))
			for i := range *in {
				if (*in)[i] != nil {
					in, out := &(*in)[i], &(*out)[i]
					*out = make(map[string]string, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppPodSpec.
func (in *LibertyAppPodSpec) DeepCopy() *LibertyAppPodSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppPodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppRbacSpec) DeepCopyInto(out *LibertyAppRbacSpec) {
	*out = *in
	if in.Install != nil {
		in, out := &in.Install, &out.Install
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppRbacSpec.
func (in *LibertyAppRbacSpec) DeepCopy() *LibertyAppRbacSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppRbacSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppResourcesConstraintsSpec) DeepCopyInto(out *LibertyAppResourcesConstraintsSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppResourcesConstraintsSpec.
func (in *LibertyAppResourcesConstraintsSpec) DeepCopy() *LibertyAppResourcesConstraintsSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppResourcesConstraintsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppResourcesLimitsSpec) DeepCopyInto(out *LibertyAppResourcesLimitsSpec) {
	*out = *in
	if in.Cpu != nil {
		in, out := &in.Cpu, &out.Cpu
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppResourcesLimitsSpec.
func (in *LibertyAppResourcesLimitsSpec) DeepCopy() *LibertyAppResourcesLimitsSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppResourcesLimitsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppResourcesRequestsSpec) DeepCopyInto(out *LibertyAppResourcesRequestsSpec) {
	*out = *in
	if in.Cpu != nil {
		in, out := &in.Cpu, &out.Cpu
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppResourcesRequestsSpec.
func (in *LibertyAppResourcesRequestsSpec) DeepCopy() *LibertyAppResourcesRequestsSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppResourcesRequestsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppResourcesSpec) DeepCopyInto(out *LibertyAppResourcesSpec) {
	*out = *in
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = new(LibertyAppResourcesConstraintsSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = new(LibertyAppResourcesRequestsSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = new(LibertyAppResourcesLimitsSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppResourcesSpec.
func (in *LibertyAppResourcesSpec) DeepCopy() *LibertyAppResourcesSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppResourcesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppServiceSpec) DeepCopyInto(out *LibertyAppServiceSpec) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ExtraPorts != nil {
		in, out := &in.ExtraPorts, &out.ExtraPorts
		*out = new([]map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]map[string]string, len(*in))
			for i := range *in {
				if (*in)[i] != nil {
					in, out := &(*in)[i], &(*out)[i]
					*out = make(map[string]string, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ExtraSelectors != nil {
		in, out := &in.ExtraSelectors, &out.ExtraSelectors
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TargetPort != nil {
		in, out := &in.TargetPort, &out.TargetPort
		*out = new(int)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppServiceSpec.
func (in *LibertyAppServiceSpec) DeepCopy() *LibertyAppServiceSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppSessioncacheHazelcastImageSpec) DeepCopyInto(out *LibertyAppSessioncacheHazelcastImageSpec) {
	*out = *in
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.PullPolicy != nil {
		in, out := &in.PullPolicy, &out.PullPolicy
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppSessioncacheHazelcastImageSpec.
func (in *LibertyAppSessioncacheHazelcastImageSpec) DeepCopy() *LibertyAppSessioncacheHazelcastImageSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppSessioncacheHazelcastImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppSessioncacheHazelcastSpec) DeepCopyInto(out *LibertyAppSessioncacheHazelcastSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Embedded != nil {
		in, out := &in.Embedded, &out.Embedded
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(LibertyAppSessioncacheHazelcastImageSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppSessioncacheHazelcastSpec.
func (in *LibertyAppSessioncacheHazelcastSpec) DeepCopy() *LibertyAppSessioncacheHazelcastSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppSessioncacheHazelcastSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppSessioncacheSpec) DeepCopyInto(out *LibertyAppSessioncacheSpec) {
	*out = *in
	if in.Hazelcast != nil {
		in, out := &in.Hazelcast, &out.Hazelcast
		*out = new(LibertyAppSessioncacheHazelcastSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppSessioncacheSpec.
func (in *LibertyAppSessioncacheSpec) DeepCopy() *LibertyAppSessioncacheSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppSessioncacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppSpec) DeepCopyInto(out *LibertyAppSpec) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(LibertyAppServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.IiopService != nil {
		in, out := &in.IiopService, &out.IiopService
		*out = new(LibertyAppIiopServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Ssl != nil {
		in, out := &in.Ssl, &out.Ssl
		*out = new(LibertyAppSslSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(LibertyAppImageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(LibertyAppDeploymentSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Arch != nil {
		in, out := &in.Arch, &out.Arch
		*out = new(LibertyAppArchSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(LibertyAppIngressSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(LibertyAppResourcesSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplicaCount != nil {
		in, out := &in.ReplicaCount, &out.ReplicaCount
		*out = new(int)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = new(LibertyAppLogsSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Rbac != nil {
		in, out := &in.Rbac, &out.Rbac
		*out = new(LibertyAppRbacSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Sessioncache != nil {
		in, out := &in.Sessioncache, &out.Sessioncache
		*out = new(LibertyAppSessioncacheSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(LibertyAppMonitoringSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceNameOverride != nil {
		in, out := &in.ResourceNameOverride, &out.ResourceNameOverride
		*out = new(string)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = new(LibertyAppEnvSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Autoscaling != nil {
		in, out := &in.Autoscaling, &out.Autoscaling
		*out = new(LibertyAppAutoscalingSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.JmsService != nil {
		in, out := &in.JmsService, &out.JmsService
		*out = new(LibertyAppJmsServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(LibertyAppPodSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Persistence != nil {
		in, out := &in.Persistence, &out.Persistence
		*out = new(LibertyAppPersistenceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Microprofile != nil {
		in, out := &in.Microprofile, &out.Microprofile
		*out = new(LibertyAppMicroprofileSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppSpec.
func (in *LibertyAppSpec) DeepCopy() *LibertyAppSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibertyAppSslSpec) DeepCopyInto(out *LibertyAppSslSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.UseClusterSSLConfiguration != nil {
		in, out := &in.UseClusterSSLConfiguration, &out.UseClusterSSLConfiguration
		*out = new(bool)
		**out = **in
	}
	if in.CreateClusterSSLConfiguration != nil {
		in, out := &in.CreateClusterSSLConfiguration, &out.CreateClusterSSLConfiguration
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibertyAppSslSpec.
func (in *LibertyAppSslSpec) DeepCopy() *LibertyAppSslSpec {
	if in == nil {
		return nil
	}
	out := new(LibertyAppSslSpec)
	in.DeepCopyInto(out)
	return out
}
